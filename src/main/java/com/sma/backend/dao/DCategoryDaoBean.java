package com.sma.backend.dao;

import java.util.Date;

import net.sf.mardao.core.CursorPage;

import com.google.appengine.api.datastore.Entity;
import com.sma.backend.domain.DCategory;

/**
 * Implementation of Business Methods related to entity DCategory.
 * This (empty) class is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2014-01-23T22:14:35.572+0700.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DCategoryDaoBean 
	extends GeneratedDCategoryDaoImpl
		implements DCategoryDao 
{

    public static final int    SORTED_BY_NAME                    = 1;
    public static final int    SORTED_BY_UPDATED_DATE            = 2;
    public static final String COLUMN_NAME_NAME_CASE_INSENSITIVE = "_ci_name";

    public DCategoryDaoBean() {
        memCacheEntities=true;
    }
    /*
     * (non-Javadoc)
     * 
     * @see net.sf.mardao.core.dao.DaoImpl#domainToCore(java.lang.Object, java.util.Date)
     */
    @Override
    public Entity domainToCore(DCategory domain, Date currentDate) {
        // TODO Auto-generated method stub
        Entity core = super.domainToCore(domain, currentDate);
        final String name = domain.getName();
        if (null != name) {
            setCoreProperty(core, COLUMN_NAME_NAME_CASE_INSENSITIVE, name.toUpperCase());
        }
        return core;
    }

    // TODO: implement your Business Methods here
    @Override
    public Iterable<DCategory> queryAll() {
        return queryIterable(false, 0, -1, null, null, COLUMN_NAME_NAME, true, null, false);
    }

    @Override
    public CursorPage<DCategory> queryPage(int pageSize, String cursorString) {
        return super.queryPage(pageSize, COLUMN_NAME_UPDATEDDATE, false, null, false, cursorString);
    }

    @Override
    public CursorPage<DCategory> queryPageWithSortField(int pageSize, String cursorString, int sortBy, boolean isAscending) {

        if (sortBy == SORTED_BY_NAME) {
            return queryPage(false, pageSize, null, null, COLUMN_NAME_NAME_CASE_INSENSITIVE, isAscending, null, false,
                    cursorString);

        }
        else if (sortBy == SORTED_BY_UPDATED_DATE) {
            return queryPage(false, pageSize, null, null, COLUMN_NAME_UPDATEDDATE, isAscending, null, false, cursorString);
        }

        return queryPage(false, pageSize, null, null, null, false, null, false, cursorString);
    }

}
